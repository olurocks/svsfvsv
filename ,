const express = require("express")
const app = express();

const bodyParser = require("body-parser");
app.use(bodyParser.urlencoded({ extended: true }));

const mongoose = require("mongoose");
mongoose.connect("mongodb://localhost/database", {useNewUrlParser: true});

const userSchema = new mongoose.Schema({
    email:{type: String, required: true, unique: true},
    username: {type:String, required: true, unique: true},
    password: {type:  String, required: true},
});
 
userSchema.path('email').validate(function (value) {
    return new Promise((resolve, reject) => {
        User.findOne({ email: value }, (err, user) => {
            if (err) {
                reject(err);
            } else if (user) {
                reject(new Error('Email already in use'));
            } else {
                resolve(true);
            }
        });
    });
}, 'Email already in use');

const mediaSchema = new mongoose.Schema({
    filename:{type:String, required: false, unique:true},
    filetype:{type:String, required: true},
    


})

const User = mongoose.model("User",userSchema);

const expressIp = require('express-ip');
app.use(expressIp().getIpInfoMiddleware);

const session = require("express-session")
app.use(session({
    secret: 'your_secret_key',
    resave:false,
    saveUninitialized: false,
    cookie: { secure: false }
}));

app.post("/signup", (req,res) => {
    const user = new User({
            email: req.body.email,
            username: req.body.username,
            password: req.body.password,
        });
    const bcrypt = require("bcrypt")
    const saltRounds = 13
    bcrypt.hash(req.body.password,saltRounds, (err,hash)=>{
        if(err) throw err;
        user.password = hash;
        user.save((error) => {
            if(error){
                console.log( "data save error")
                res.status(500).send("there seems to have been a problem while saving user")
            }else{
                console.log("user saved successfully");
                req.session.user = {
                    email:req.body.email,
                    username: req.body.username,
                    ip: req.ipinfo,
                };
                res.redirect('/login')
                
            }
        });
    });
});

app.post("/login", (req,res => {
    const user = User({
        email :req.body.email,
        username: req.body.username,
        password: req.body.password,
    })
})) 

 

